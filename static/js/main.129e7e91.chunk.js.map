{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/SearchBar/Searchbar.module.css","components/SearchBar/Searchbar.jsx","api/imagesApi.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchbar","setSearchbar","className","s","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","getImages","axios","create","baseURL","params","key","image_type","orientation","a","q","page","per_page","data","console","api","fetchCard","Button","onClick","modalRoot","document","querySelector","Modal","onClose","largeImageURL","alt","createPortal","Overlay","src","ImageGalleryItem","webformatURL","tags","onOpenModal","ImageGalleryItemImage","ImageGallery","searchQuery","cardImage","setCardImage","setError","status","setStatus","setPage","setAlt","setLargeImageURL","useEffect","cardAPI","then","cardImageNew","total","hits","catch","prevState","window","scrollTo","top","documentElement","scrollHeight","behavior","addEventListener","onEscClick","code","onCloseModal","removeEventListener","color","height","width","timeout","map","img","id","length","App","setSearchQuery","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.129e7e91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2FQlj\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__22QF3\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__k9MSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1hFBW\",\"Modal\":\"Modal_Modal__Qjd9Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2vL5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1w81T\",\"SearchForm\":\"Searchbar_SearchForm__1EoGO\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3D2j6\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3RXlp\",\"SearchFormInput\":\"Searchbar_SearchFormInput__kdXj-\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchbar, setSearchbar] = useState('');\n\n  const handleNameChange = event => {\n    setSearchbar(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchbar.trim() === '') {\n      toast.error('Error! Еnter something');\n      return;\n    }\n    onSubmit(searchbar);\n    setSearchbar('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchbar}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport { Searchbar };\n","import axios from 'axios';\nconst getImages = axios.create({\n  baseURL: 'https://pixabay.com/api/',\n  params: {\n    key: '21917533-94fc46511cdba7fd05c8e408d',\n    image_type: 'photo',\n    orientation: 'horizontal',\n  },\n});\n\nasync function fetchCard(q = '', page = 1, per_page = 12) {\n  const params = { q, page, per_page };\n  try {\n    const { data } = await getImages('', { params });\n    return data;\n  } catch (error) {\n    console.error(`No results found for ${q}'`);\n  }\n}\n\nconst api = { fetchCard };\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  loadMoreBtn: PropTypes.func,\n};\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, largeImageURL, alt }) {\n  return createPortal(\n    <div className={s.Overlay} onClick={onClose}>\n      <div className={s.Modal}>\n        <img src={largeImageURL} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from '../ImageGallery/ImageGallery.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  tags,\n  largeImageURL,\n  onOpenModal,\n}) => {\n  return (\n    <li\n      onClick={() => {\n        onOpenModal(largeImageURL, tags);\n      }}\n    >\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  largeImageURL: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport cardAPI from '../../api/imagesApi';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ searchQuery }) {\n  // state = {\n  //   cardImage: [],\n  //   error: null,\n  //   loading: false,\n  //   status: 'idle',\n  //   page: 1,\n  // };\n\n  const [cardImage, setCardImage] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [alt, setAlt] = useState('');\n  const [largeImageURL, setLargeImageURL] = useState('');\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.searchQuery !== this.props.searchQuery) {\n  //     this.setState({ status: 'pending' });\n\n  //     cardAPI(this.props.searchQuery, this.state.page)\n  //       .then(cardImage => cardImage.hits)\n  //       .then(cardImage =>\n  //         this.setState({ cardImage: cardImage, status: 'resolved' }),\n  //       );\n  //   }\n\n  //   if (prevState.page !== this.state.page && this.state.page !== 1) {\n  //     this.setState({ status: 'pending' });\n\n  //     cardAPI(this.props.searchQuery, this.state.page)\n  //       .then(cardImage => cardImage.hits)\n  //       .then(cardImage =>\n  //         this.setState(prevState => ({\n  //           cardImage: [...prevState.cardImage, ...cardImage],\n  //           status: 'resolved',\n  //         })),\n  //       );\n  //   }\n  //   if (prevState.cardImage !== this.state.cardImage) {\n  //     window.scrollTo({\n  //       top: document.documentElement.scrollHeight,\n  //       behavior: 'smooth',\n  //     });\n  //   }\n  // }\n\n  useEffect(() => {\n    //==== если пустая строка ====\n    if (!searchQuery) {\n      return;\n    }\n\n    setStatus('pending');\n\n    if (page === 1) {\n      cardAPI\n        .fetchCard(searchQuery, page)\n        .then(cardImageNew => {\n          if (cardImageNew.total === 0) {\n            setError(`Not found ${searchQuery}`);\n            setStatus('rejected');\n          } else {\n            setCardImage(cardImageNew.hits);\n            setStatus('resolved');\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n\n    if (page !== 1) {\n      cardAPI\n        .fetchCard(searchQuery, page)\n        .then(cardImageNew => {\n          setCardImage(prevState => [...prevState, ...cardImageNew.hits]);\n          setStatus('resolved');\n        })\n        .then(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [searchQuery, page]);\n\n  const loadMoreBtn = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const onOpenModal = (largeImageURL, alt) => {\n    setLargeImageURL(largeImageURL);\n    setAlt(alt);\n    window.addEventListener('keydown', onEscClick);\n  };\n\n  const onEscClick = event => {\n    const ESC_KEY_CODE = 'Escape';\n\n    if (event.code === ESC_KEY_CODE) {\n      onCloseModal();\n    }\n  };\n\n  const onCloseModal = () => {\n    setLargeImageURL('');\n    setAlt('');\n    window.removeEventListener('keydown', onEscClick);\n  };\n\n  return (\n    <>\n      {status === 'pending' && (\n        <div>\n          <Loader\n            type=\"MutatingDots\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />\n        </div>\n      )}\n\n      {status === 'rejected' && <h1>Oops! Try again.</h1>}\n\n      {status === 'resolved' && (\n        <ul className={s.ImageGallery}>\n          {cardImage.map(img => {\n            return (\n              <ImageGalleryItem\n                key={img.id}\n                alt={img.tags}\n                webformatURL={img.webformatURL}\n                largeImageURL={img.largeImageURL}\n                onOpenModal={onOpenModal}\n              />\n            );\n          })}\n          {cardImage.length > 0 && <Button onClick={loadMoreBtn} />}\n\n          {largeImageURL && (\n            <Modal\n              largeImageURL={largeImageURL}\n              alt={alt}\n              onClose={onCloseModal}\n            />\n          )}\n        </ul>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from '../SearchBar/Searchbar';\nimport ImageGallery from '../ImageGallery/ImageGallery';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <div>\n      <Searchbar onSubmit={setSearchQuery} />\n\n      <ImageGallery searchQuery={searchQuery} />\n\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}